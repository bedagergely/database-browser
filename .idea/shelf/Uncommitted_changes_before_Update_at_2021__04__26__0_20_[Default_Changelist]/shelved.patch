Index: adatbazis-desktop/src/main/java/hu/bp3sjt/controller/MainWindowController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package hu.bp3sjt.controller;\r\n\r\nimport hu.bp3sjt.App;\r\nimport hu.bp3sjt.dao.DataBaseDAO;\r\nimport hu.bp3sjt.dao.DataBaseDaoImp;\r\nimport hu.bp3sjt.model.Column;\r\nimport hu.bp3sjt.model.DataBase;\r\nimport hu.bp3sjt.model.Table;\r\nimport hu.bp3sjt.model.TableItem;\r\nimport javafx.application.Platform;\r\nimport javafx.beans.binding.StringBinding;\r\nimport javafx.beans.binding.When;\r\nimport javafx.beans.property.SimpleStringProperty;\r\nimport javafx.beans.property.StringProperty;\r\nimport javafx.beans.value.ObservableValue;\r\nimport javafx.collections.FXCollections;\r\nimport javafx.collections.ObservableList;\r\nimport javafx.event.ActionEvent;\r\nimport javafx.fxml.FXML;\r\nimport javafx.fxml.Initializable;\r\nimport javafx.geometry.Pos;\r\nimport javafx.scene.Node;\r\nimport javafx.scene.Scene;\r\nimport javafx.scene.control.*;\r\nimport javafx.scene.layout.BorderPane;\r\nimport javafx.scene.layout.HBox;\r\nimport javafx.scene.layout.VBox;\r\nimport javafx.scene.text.TextAlignment;\r\nimport javafx.stage.FileChooser;\r\nimport javafx.stage.Modality;\r\nimport javafx.stage.Stage;\r\nimport javafx.util.Callback;\r\n\r\nimport java.io.File;\r\nimport java.net.URL;\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\nimport java.util.ResourceBundle;\r\n\r\npublic class MainWindowController implements Initializable {\r\n\r\n\r\n    private DataBase dataBase;\r\n    private DataBaseDAO dao = new DataBaseDaoImp();\r\n    private Node leftSideNode;\r\n    private Table selectedTable;\r\n    private TableItem selectedTableItem;\r\n\r\n\r\n    @FXML\r\n    private ListView<Table> tableListView;\r\n\r\n    @FXML\r\n    private TableView<TableItem> columnsTableView;\r\n\r\n    @FXML\r\n    private BorderPane borderPane;\r\n\r\n    @FXML\r\n    private void onExit(){\r\n        Platform.exit();\r\n    }\r\n\r\n\r\n    @FXML\r\n    public void onOpenDataBase(ActionEvent actionEvent) {\r\n        FileChooser fileChooser = new FileChooser();\r\n        fileChooser.getExtensionFilters().add(new FileChooser.ExtensionFilter(\"Database files\", \"*.db\"));\r\n        File selectedFile = fileChooser.showOpenDialog(null);\r\n        if(selectedFile != null){\r\n            dataBase = new DataBase();\r\n            dataBase.setUrl(selectedFile.getAbsolutePath());\r\n            dataBase.setName(selectedFile.getName());\r\n            List<Table> tables = dao.findAllTables(dataBase);\r\n            dataBase.setTables(FXCollections.observableArrayList(tables));\r\n            tableListView.itemsProperty().bind(dataBase.tablesProperty());\r\n            App.setStageTitle(dataBase.getName());\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public void initialize(URL url, ResourceBundle resourceBundle) {\r\n        tableListView.setCellFactory(param -> {\r\n            ListCell<Table> cell = new ListCell<>();\r\n            StringBinding cellTextBinding = new When(cell.itemProperty().isNotNull()).then(cell.itemProperty().asString()).otherwise(\"\");\r\n            cell.textProperty().bind(cellTextBinding);\r\n            cell.setOnMouseClicked(mouseEvent -> {\r\n                if(cell.isSelected() && mouseEvent.getClickCount() >= 2){\r\n                    showTableSchema(cell.getItem());\r\n                }\r\n            });\r\n            return cell;\r\n        });\r\n\r\n        tableListView.getSelectionModel().selectedItemProperty().addListener((observable, oldTable, newTable)->{\r\n            if (newTable == null || dataBase == null){\r\n                columnsTableView.getColumns().removeAll(columnsTableView.getColumns());\r\n            }else if(dataBase != null){\r\n                columnsTableView.getColumns().removeAll(columnsTableView.getColumns());\r\n                selectedTable = newTable;\r\n                List<Column> columns = dao.findAllColumns(dataBase, newTable);\r\n                newTable.setColumns(FXCollections.observableArrayList(columns));\r\n                columns.forEach(column -> {\r\n                    TableColumn tableColumn = new TableColumn<TableItem, String>(column.getName());\r\n                    tableColumn.setMinWidth(80);\r\n                    tableColumn.setCellValueFactory(new Callback<TableColumn.CellDataFeatures<TableItem, String>, ObservableValue<String>>() {\r\n                        @Override\r\n                        public ObservableValue call(TableColumn.CellDataFeatures param) {\r\n                            return new SimpleStringProperty(((TableItem)param.getValue()).getFields().get(column.getIndex()));\r\n                        }\r\n                    });\r\n                    columnsTableView.getColumns().add(tableColumn);\r\n                });\r\n                //passes the table items to the tableview\r\n                List<TableItem> tableItems = dao.findAllItems(dataBase, newTable);\r\n                columnsTableView.getItems().setAll(FXCollections.observableArrayList(tableItems));\r\n            }\r\n        });\r\n\r\n        columnsTableView.getSelectionModel().selectedItemProperty().addListener(((observableValue, oldRow, newRow) -> {\r\n            selectedTableItem = newRow;\r\n        }));\r\n    }\r\n\r\n    public void onCloseDataBase(ActionEvent actionEvent) {\r\n        dataBase = null;\r\n        tableListView.getItems().removeAll(tableListView.getItems());\r\n        columnsTableView.getItems().removeAll(columnsTableView.getItems());\r\n    }\r\n\r\n    public void onEditMenu(ActionEvent actionEvent) {\r\n        if(borderPane.leftProperty().isNull().get())  borderPane.leftProperty().set(leftSideNode);\r\n        borderPane.bottomProperty().set(null);\r\n        VBox rightVbox = new VBox();\r\n        Button editButton = new Button(\"Edit\");\r\n        Button deleteButton = new Button(\"Delete\");\r\n        Button addButton = new Button(\"Add\");\r\n\r\n        editButton.setTranslateY(25);\r\n        deleteButton.setTranslateY(25);\r\n        addButton.setTranslateY(25);\r\n\r\n        editButton.setMaxWidth(Double.MAX_VALUE);\r\n        deleteButton.setMaxWidth(Double.MAX_VALUE);\r\n        addButton.setMaxWidth(Double.MAX_VALUE);\r\n\r\n        editButton.setOnAction(actionEvent1 -> {\r\n            showEditItem();\r\n        });\r\n\r\n        deleteButton.setOnAction(actionEvent1 -> {\r\n        });\r\n\r\n        addButton.setOnAction(actionEvent1 -> {\r\n        });\r\n\r\n        rightVbox.setSpacing(20);\r\n\r\n        rightVbox.getChildren().setAll(editButton, deleteButton, addButton);\r\n        borderPane.rightProperty().set(rightVbox);\r\n    }\r\n\r\n    public void onNormalMenu(ActionEvent actionEvent) {\r\n        borderPane.rightProperty().set(null);\r\n        borderPane.bottomProperty().set(null);\r\n        borderPane.leftProperty().set(leftSideNode);\r\n    }\r\n\r\n    public void onSQLMenu(ActionEvent actionEvent) {\r\n        borderPane.rightProperty().set(null);\r\n        leftSideNode = borderPane.leftProperty().get();\r\n        borderPane.leftProperty().set(null);\r\n\r\n        VBox bottomVbox = new VBox();\r\n        TextArea sqlText = new TextArea();\r\n\r\n        bottomVbox.getChildren().add(sqlText);\r\n\r\n        borderPane.setBottom(bottomVbox);\r\n    }\r\n\r\n    private void showEditItem(){\r\n        if(selectedTable == null || selectedTableItem == null) return;\r\n\r\n        Stage stage = new Stage();\r\n        stage.initModality(Modality.APPLICATION_MODAL);\r\n        VBox root = new VBox();\r\n        HBox main = new HBox();\r\n        VBox left = new VBox();\r\n        VBox right = new VBox();\r\n\r\n        List<Label> labels = new ArrayList<>();\r\n        List<TextField> textFields = new ArrayList<>();\r\n        ObservableList<Column> columns = selectedTable.getColumns();\r\n\r\n        for(int i = 0; i < columns.size(); i++){\r\n          Label label = new Label(columns.get(i).getName());\r\n          TextField textField = new TextField(selectedTableItem.getFields().get(i));\r\n\r\n          label.minHeightProperty().bind(textField.heightProperty());\r\n\r\n          left.getChildren().add(label);\r\n          right.getChildren().add(textField);\r\n          labels.add(label);\r\n          textFields.add(textField);\r\n        }\r\n\r\n        Button ok = new Button(\"ok\");\r\n        Button cancel = new Button(\"cancel\");\r\n        HBox buttonBox = new HBox();\r\n        ok.minWidthProperty().bind(main.widthProperty().divide(2).subtract(1));\r\n        cancel.minWidthProperty().bind(main.widthProperty().divide(2).subtract(1));\r\n\r\n        buttonBox.getChildren().addAll(ok, cancel);\r\n        main.getChildren().addAll(left, right);\r\n        root.getChildren().addAll(main, buttonBox);\r\n\r\n        Scene scene = new Scene(root);\r\n        stage.setTitle(selectedTable.getName());\r\n        stage.setScene(scene);\r\n        stage.setResizable(false);\r\n        stage.showAndWait();\r\n\r\n    }\r\n\r\n    private void showTableSchema(Table table){\r\n        Stage stage = new Stage();\r\n        stage.initModality(Modality.APPLICATION_MODAL);\r\n\r\n        VBox root = new VBox();\r\n        TextArea schemaTA = new TextArea();\r\n        schemaTA.setText(table.getSchema());\r\n        schemaTA.setEditable(false);\r\n        root.getChildren().add(schemaTA);\r\n\r\n        Scene scene = new Scene(root);\r\n\r\n        stage.setTitle(table.getName());\r\n        stage.setScene(scene);\r\n        stage.setResizable(false);\r\n        stage.showAndWait();\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/adatbazis-desktop/src/main/java/hu/bp3sjt/controller/MainWindowController.java b/adatbazis-desktop/src/main/java/hu/bp3sjt/controller/MainWindowController.java
--- a/adatbazis-desktop/src/main/java/hu/bp3sjt/controller/MainWindowController.java	(revision 52f3651ead92e0189dffb199b8ffa861108ee1f8)
+++ b/adatbazis-desktop/src/main/java/hu/bp3sjt/controller/MainWindowController.java	(date 1619389124897)
@@ -11,21 +11,18 @@
 import javafx.beans.binding.StringBinding;
 import javafx.beans.binding.When;
 import javafx.beans.property.SimpleStringProperty;
-import javafx.beans.property.StringProperty;
 import javafx.beans.value.ObservableValue;
 import javafx.collections.FXCollections;
 import javafx.collections.ObservableList;
 import javafx.event.ActionEvent;
 import javafx.fxml.FXML;
 import javafx.fxml.Initializable;
-import javafx.geometry.Pos;
 import javafx.scene.Node;
 import javafx.scene.Scene;
 import javafx.scene.control.*;
 import javafx.scene.layout.BorderPane;
 import javafx.scene.layout.HBox;
 import javafx.scene.layout.VBox;
-import javafx.scene.text.TextAlignment;
 import javafx.stage.FileChooser;
 import javafx.stage.Modality;
 import javafx.stage.Stage;
